(library
 (public_name parser_plaf)
 (libraries menhirLib)
 (name parser_plaf))

(ocamllex 
 (modules lexer)
)

(menhir
 (modules grammar)
 ;; (flags -lg 1 -la 1 -lc 2 --dump --explain)
)

; the next line avoids warnings from stopping the build

(env
 (dev
  (flags
   (:standard -warn-error -A))))

;; The following two rules create a copy of the file parser.mly named
;; unitActionsParser.mly. This is a copy of the grammar where the semantic
;; actions have been removed and replaced with unit values. It is compiled
;; by Menhir's table back-end to obtain the module UnitActionsParser.

;; The use of [--external-tokens Parser] is required for the two parsers
;; to share a single [token] type. This makes them usable with the same
;; lexer.

(rule
  (action
    (with-stdout-to unitActionsGrammar.mly
      (run menhir
        %{dep:grammar.mly}
        --only-preprocess-u
))))

(menhir
  (modules unitActionsGrammar)
  (flags --table --external-tokens Grammar)
)

;; -----------------------------------------------------------------------------

;; This section deals with the .messages file.

;; The following rule generates "parserMessages.ml" based on the source file
;; "parserMessages.messages". It requires the completeness check to have been
;; performed first. (If desired, this check could be disabled.)

(rule
  (deps parserMessages.check)
  (action (with-stdout-to parserMessages.ml
    (run menhir
      %{dep:grammar.mly}
      --compile-errors %{dep:parserMessages.messages}
    )
  ))
)

;; This rule generates a file "parserMessages.auto.messages" that contains a
;; list of all error states. It is used by the completeness check.

(rule
  (with-stdout-to parserMessages.auto.messages
    (run menhir
       %{dep:grammar.mly}
       --list-errors
    )
  )
)

;; This rule implements the completeness check. It checks that every error
;; state listed in the auto-generated file "parserMessages.auto.messages"
;; is also listed in the file "parserMessages.messages" that is maintained
;; by the programmer.

(rule
  (with-stdout-to parserMessages.check
  (run menhir
    %{dep:grammar.mly}
    --compare-errors %{dep:parserMessages.auto.messages}
    --compare-errors %{dep:parserMessages.messages}
  ))
)




